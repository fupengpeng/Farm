<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
	<class name="com.jiudianlianxian.domain.User" table="farm_user">
		<id name="userId" column="userId">
			<generator class="native"></generator>
		</id>
		<property name="userNickName" column="userNickName"></property>
		<property name="userImage" column="userImage"></property>
		<property name="userGold" column="userGold"></property>

		<!-- name属性：用户set集合名 -->
		<!-- table属性：第三张表名 -->
		<!-- <set name="user_setOrders" table="user_order" cascade="save-update,delete"> 
			key标签里面的配置 column属性：配置当前映射文件在第三张表的外键名称 <key column="userid"></key> class属性：用户实体类全路径 
			column属性：用户在第三张表的外键名称 <many-to-many class="com.jiudianlianxian.domain.Order" 
			column="orderid"></many-to-many> </set> -->


		<!-- 在客户映射文件中，表示所有联系人 使用set标签表示所有联系人 set标签里面有name属性： 属性值写在客户实体类里面表示联系人的set集合名称 
			inverse属性默认值：false不放弃关系维护 true表示放弃关系维护 -->
		<!-- inverse属性：默认false即不放弃维护外键的机会，true即放弃维护外键的机会 配置了inverse属性为true后，添加联系人时，就不会再客户方维护联系人的外键，需要再次手动维护 
			inverse="true" -->
		<set name="userSeeds" cascade="save-update,delete">
			<!-- 一对多建表，有外键 hibernate机制：双向维护外键，在一和多那一方都配置外键 修改时会修改两次，性能上有缺陷 column属性值：外键名称 -->
			<key column="userId"></key>
			<!-- 客户所有的联系人，class里面写联系人实体类全路径 -->
			<one-to-many class="com.jiudianlianxian.domain.Seed" />
		</set>
		<set name="userLands" cascade="save-update,delete">
			<!-- 一对多建表，有外键 hibernate机制：双向维护外键，在一和多那一方都配置外键 修改时会修改两次，性能上有缺陷 column属性值：外键名称 -->
			<key column="userId"></key>
			<!-- 客户所有的联系人，class里面写联系人实体类全路径 -->
			<one-to-many class="com.jiudianlianxian.domain.Land" />
		</set>

	</class>
</hibernate-mapping>